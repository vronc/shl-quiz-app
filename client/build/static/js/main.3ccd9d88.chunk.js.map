{"version":3,"sources":["components/styledComponents/Button.js","components/styledComponents/Headline.js","components/styledComponents/Loader.js","components/styledComponents/Card.js","components/styledComponents/Input.js","components/styledComponents/B.js","components/styledComponents/ImageCard.js","components/styledComponents/ProgressBar.js","components/TeamPicker.js","components/PlayerCard.js","components/ScoreKeeper.js","components/Quiz.js","utils/Shuffle.js","utils/Constants.js","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","p","selected","Headline","h1","rotate360","keyframes","Loader","div","size","Card","flexWrap","flexDirection","Input","input","props","inputColor","B","ImageCard","img","src","TeamPicker","handleSelectTeam","selectedTeams","useState","teams","setTeams","useEffect","axios","get","then","res","response","data","body","map","team","i","includes","team_code","onClick","PlayerCard","playerImg","playerName","playerNumber","alt","first","last","ScoreKeeper","score","Quiz","endQuiz","players","setPlayers","playerIndex","setPlayerIndex","answer","setAnswer","setScore","handleNextQuestion","length","teamCode","params","trim","shuffledResponse","array","j","Math","floor","random","shuffle","className","player_image_url","first_name","last_name","default_jersey","onSubmit","event","preventDefault","currentScore","checkAnswer","onChange","target","value","pattern","QUIZ_STATES","GlobalStyle","createGlobalStyle","App","setSelectedTeams","quizState","setQuizState","result","setResult","style","class","newSelectedTeams","filter","t","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ccd9d88.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Button = styled.button`\n  color: white;\n  background: ${(p) => (p.selected ? \"black\" : \"#f8049c\")};\n  font-weight: bold;\n  width: 15%;\n  padding: 8px;\n  border-radius: 4px;\n  box-shadow: none;\n  font-size: 1em;\n  display: block;\n  border: none;\n  white-space: none;\n  margin: 0.25rem;\n\n  &:disabled {\n    background: #eee;\n    color: #666;\n  }\n`;\n\nexport { Button };\n","import styled from \"styled-components\";\n\nconst Headline = styled.h1`\n  color: white;\n`;\n\nexport { Headline };\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\n// Taken from https://gist.github.com/adrianmcli/9fac3ff3c144c2805be90381eaa8d3d4\nconst Loader = styled.div`\n  padding: 1rem;\n  margin: 2rem;\n  animation: ${rotate360} 1s linear infinite;\n  transform: translateZ(0);\n  //border-top: calc(${(p) => p.size}% - 22) solid blue;\n  border-top: 2px solid darkcyan;\n  border-right: 2px solid grey;\n  border-bottom: 2px solid darkcyan;\n  border-left: 4px solid cyan;\n  background: transparent;\n  width: ${(p) => p.size};\n  height: ${(p) => p.size};\n  border-radius: 50%;\n`;\n\nexport { Loader };\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  width: 90%;\n  background-color: lightseagreen;\n  border-radius: 10px;\n  display: flex;\n  flex-wrap: ${(p) => (p.flexWrap ? p.flexWrap : \"wrap\")};\n  flex-direction: ${(p) => (p.flexDirection ? p.flexDirection : \"row\")};\n  align-items: center;\n  justify-content: center;\n  align-content: center;\n  margin: 1rem;\n`;\n\nexport { Card };\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: ${(props) => props.inputColor || \"palevioletred\"};\n  background: seashell;\n  border: none;\n  border-radius: 3px;\n`;\n\nexport { Input };\n","import styled from \"styled-components\";\n\nconst B = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport { B };\n","import styled from \"styled-components\";\n\nconst ImageCard = styled.img`\n  src: ${(p) => p.src};\n  background-color: aqua;\n  border-radius: 10px;\n  box-shadow: 0 0 0 13px seashell;\n  align-items: center;\n  justify-content: center;\n  align-content: center;\n  margin: 2rem;\n`;\n\nexport { ImageCard };\n","import styled from \"styled-components\";\n\nconst progressSegment = styled.div`\n  display: flex;\n  margin-bottom: 4em;\n`;\n\nconst ProgressBar = styled.div`\n  .container {\n    max-width: 60em;\n    margin: 0 auto;\n  }\n\n  .item {\n    width: 100%;\n    background-color: lightgray;\n    margin-right: 2px;\n    height: 8px;\n\n    &:first-child {\n      border-top-left-radius: 3px;\n      border-bottom-left-radius: 3px;\n    }\n\n    &:last-child {\n      border-top-right-radius: 3px;\n      border-bottom-right-radius: 3px;\n    }\n  }\n`;\nexport { ProgressBar };\n","import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport { Button, Card, B, Loader, ProgressBar } from \"./styledComponents/Index\";\n\nconst TeamPicker = ({ handleSelectTeam, selectedTeams }) => {\n  const [teams, setTeams] = useState(null);\n\n  const fetchteams = () =>\n    axios.get(\"/api/v1/get-teams\").then((res) => {\n      const response = res.data.body;\n      setTeams(response);\n    });\n\n  useEffect(() => {\n    fetchteams();\n  }, []);\n\n  return (\n    <B>\n      <Card>\n        <B>\n          <h1>Pick some teams!</h1>\n          <p>\n            All palyers from the selected teams will be included in the quiz.\n          </p>\n          {teams ? (\n            <Card>\n              {teams.map((team, i) => (\n                <Button\n                  selected={selectedTeams.includes(team.team_code)}\n                  onClick={() => handleSelectTeam(team.team_code)}\n                  key={i}\n                >\n                  {team.team_code}\n                </Button>\n              ))}\n            </Card>\n          ) : (\n            <Loader size=\"2rem\" />\n          )}\n        </B>\n      </Card>\n    </B>\n  );\n};\n\nexport default TeamPicker;\n","import { Headline, Card, ImageCard } from \"./styledComponents/Index\";\n\nconst PlayerCard = ({ playerImg, playerName, playerNumber }) => {\n  const showPlayerNumber = false;\n  return (\n    <Card flexDirection=\"column\">\n      <ImageCard src={playerImg} alt=\"player\" />\n      <Headline>\n        {playerName.first} {playerName.last}\n      </Headline>\n      {showPlayerNumber && <Headline># {playerNumber}</Headline>}\n    </Card>\n  );\n};\nexport default PlayerCard;\n","import { B } from \"./styledComponents/B\";\n\nconst ScoreKeeper = ({ score }) => {\n  return <B>Score: {score}</B>;\n};\n\nexport default ScoreKeeper;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PlayerCard from \"./PlayerCard\";\nimport { Loader, Input, Card, B } from \"./styledComponents/Index\";\nimport { shuffle } from \"../utils/Shuffle\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n\nconst Quiz = ({ teams, endQuiz }) => {\n  const [players, setPlayers] = useState([]);\n  const [playerIndex, setPlayerIndex] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n\n  const checkAnswer = () => {\n    const currentScore = score;\n    if (answer == players[playerIndex].default_jersey) {\n      setScore(currentScore + 1);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n      checkAnswer();\n      setAnswer(\"\");\n      handleNextQuestion();\n    }\n  };\n\n  const handleNextQuestion = () => {\n    if (players.length <= playerIndex + 1)\n      endQuiz(score + \" / \" + players.length);\n    else setPlayerIndex(playerIndex + 1);\n  };\n  useEffect(() => {\n    const fetchPlayers = () => {\n      teams.map((teamCode) =>\n        axios\n          .get(\"/api/v1/get-players-by-team\", {\n            params: { team_code: teamCode.trim() },\n          })\n          .then((res) => {\n            let response = res.data.body;\n            const shuffledResponse = shuffle(response);\n            setPlayers(shuffledResponse);\n          })\n      );\n    };\n\n    fetchPlayers();\n  }, [teams]);\n\n  const handleInputChange = (event) => {\n    setAnswer(event.target.value);\n  };\n\n  return (\n    <B className=\"Quiz\">\n      {players.length ? (\n        <B>\n          <PlayerCard\n            playerImg={players[playerIndex].player_image_url}\n            playerName={{\n              first: players[playerIndex].first_name,\n              last: players[playerIndex].last_name,\n            }}\n            playerNumber={players[playerIndex].default_jersey}\n          />\n          <Card>\n            <ScoreKeeper score={score} />\n          </Card>\n          <Card flexWrap=\"nowrap\">\n            Player number:\n            <form onSubmit={handleSubmit}>\n              <Input\n                onChange={handleInputChange}\n                pattern=\"[A-Za-z0-9]+\"\n                value={answer}\n              />\n            </form>\n          </Card>\n        </B>\n      ) : (\n        <B>\n          <Loader size=\"2rem\" />\n          Preparing your quiz...\n        </B>\n      )}\n    </B>\n  );\n};\n\nexport default Quiz;\n","// Fisher-Yates shuffle\nexport function shuffle(array) {\n  array = [...array];\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n","export const QUIZ_STATES = {\n  PICK_TEAMS: \"pick teams\",\n  QUIZ_ONGOING: \"quiz ongoing\",\n  QUIZ_RESULT: \"quiz result\",\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TeamPicker from \"./components/TeamPicker\";\nimport Quiz from \"./components/Quiz\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { B, Button } from \"./components/styledComponents/Index\";\nimport { QUIZ_STATES } from \"./utils/Constants\";\nimport { Card } from \"./components/styledComponents/Index\";\n\nconst GlobalStyle = createGlobalStyle`\nbody{\n  background: silver;\n  min-height: 100vh;\n  margin: 0;\n  color: black;\n  font-family: 'Trebuchet MS'\n}\n`;\n\nconst App = () => {\n  const connectToShl = () => axios.get(\"/api/v1/connect-to-shl\");\n\n  const [selectedTeams, setSelectedTeams] = useState([]); // DEBUG change to empty array\n  const [quizState, setQuizState] = useState(QUIZ_STATES.PICK_TEAMS); // DEBUG change to PICK_TEAMS\n  const [result, setResult] = useState(\"\");\n\n  useEffect(() => {\n    connectToShl();\n  }, []);\n\n  const endQuiz = (res) => {\n    setResult(res);\n    setQuizState(QUIZ_STATES.QUIZ_RESULT);\n  };\n\n  const handleSelectTeam = (team) => {\n    const newSelectedTeams = selectedTeams.filter((t) => t !== team);\n    setSelectedTeams(\n      newSelectedTeams.length === selectedTeams.length\n        ? [...newSelectedTeams, team]\n        : newSelectedTeams\n    );\n  };\n\n  const handleQuizStart = () => {\n    setQuizState(QUIZ_STATES.QUIZ_ONGOING);\n  };\n\n  return (\n    <B style={{ class: \"row\" }}>\n      <GlobalStyle />\n      {quizState === QUIZ_STATES.PICK_TEAMS && (\n        <B>\n          <TeamPicker\n            handleSelectTeam={handleSelectTeam}\n            selectedTeams={selectedTeams}\n          ></TeamPicker>\n          <Button\n            disabled={selectedTeams.length === 0}\n            onClick={() => handleQuizStart()}\n          >\n            Start\n          </Button>\n        </B>\n      )}\n      {quizState === QUIZ_STATES.QUIZ_ONGOING && (\n        <Quiz\n          teams={selectedTeams}\n          endQuiz={endQuiz}\n          setResult={setResult}\n        ></Quiz>\n      )}\n      {quizState === QUIZ_STATES.QUIZ_RESULT && (\n        <Card>Total Score: {result} 🎉</Card>\n      )}\n    </B>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}