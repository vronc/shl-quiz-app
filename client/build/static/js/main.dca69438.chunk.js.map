{"version":3,"sources":["components/styledComponents/Button.js","components/styledComponents/Headline.js","components/styledComponents/Loader.js","components/styledComponents/Card.js","components/styledComponents/Input.js","components/styledComponents/B.js","components/styledComponents/ImageCard.js","components/styledComponents/ProgressBar.js","components/TeamPicker.js","components/PlayerCard.js","components/ScoreKeeper.js","components/Quiz.js","utils/Shuffle.js","utils/Constants.js","App.js","reportWebVitals.js","index.js"],"names":["Button","styled","button","p","selected","Headline","h1","rotate360","keyframes","Loader","div","size","Card","flexWrap","flexDirection","Input","input","props","inputColor","B","ImageCard","img","src","ITEM_STATES","0","1","2","ProgressBarContainer","ProgressSegment","ProgressBarItem","state","TeamPicker","handleSelectTeam","selectedTeams","useState","teams","setTeams","useEffect","axios","get","then","res","response","data","body","map","team","i","includes","team_code","onClick","PlayerCard","playerImg","playerName","playerNumber","alt","first","last","ScoreKeeper","results","result","Quiz","endQuiz","players","setPlayers","questionIndex","setQuestionIndex","setResults","answer","setAnswer","score","setScore","handleNextQuestion","length","teamCode","params","trim","shuffledResponse","array","j","Math","floor","random","shuffle","Array","fill","className","player_image_url","first_name","last_name","default_jersey","onSubmit","event","preventDefault","currentScore","toString","checkAnswer","onChange","target","value","pattern","QUIZ_STATES","GlobalStyle","createGlobalStyle","App","setSelectedTeams","quizState","setQuizState","style","class","newSelectedTeams","filter","t","disabled","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dca69438.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Button = styled.button`\n  color: white;\n  background: ${(p) => (p.selected ? \"black\" : \"#f8049c\")};\n  font-weight: bold;\n  width: 15%;\n  padding: 8px;\n  border-radius: 4px;\n  box-shadow: none;\n  font-size: 1em;\n  display: block;\n  border: none;\n  white-space: none;\n  margin: 0.25rem;\n\n  &:disabled {\n    background: #eee;\n    color: #666;\n  }\n`;\n\nexport { Button };\n","import styled from \"styled-components\";\n\nconst Headline = styled.h1`\n  color: white;\n`;\n\nexport { Headline };\n","import styled, { keyframes } from \"styled-components\";\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\n// Taken from https://gist.github.com/adrianmcli/9fac3ff3c144c2805be90381eaa8d3d4\nconst Loader = styled.div`\n  padding: 1rem;\n  margin: 2rem;\n  animation: ${rotate360} 1s linear infinite;\n  transform: translateZ(0);\n  //border-top: calc(${(p) => p.size}% - 22) solid blue;\n  border-top: 2px solid darkcyan;\n  border-right: 2px solid grey;\n  border-bottom: 2px solid darkcyan;\n  border-left: 4px solid cyan;\n  background: transparent;\n  width: ${(p) => p.size};\n  height: ${(p) => p.size};\n  border-radius: 50%;\n`;\n\nexport { Loader };\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  width: 90%;\n  background-color: lightseagreen;\n  border-radius: 10px;\n  display: flex;\n  flex-wrap: ${(p) => (p.flexWrap ? p.flexWrap : \"wrap\")};\n  flex-direction: ${(p) => (p.flexDirection ? p.flexDirection : \"row\")};\n  align-items: center;\n  justify-content: center;\n  align-content: center;\n  margin: 1rem;\n`;\n\nexport { Card };\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: ${(props) => props.inputColor || \"palevioletred\"};\n  background: seashell;\n  border: none;\n  border-radius: 3px;\n`;\n\nexport { Input };\n","import styled from \"styled-components\";\n\nconst B = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport { B };\n","import styled from \"styled-components\";\n\nconst ImageCard = styled.img`\n  src: ${(p) => p.src};\n  background-color: aqua;\n  border-radius: 10px;\n  box-shadow: 0 0 0 13px seashell;\n  align-items: center;\n  justify-content: center;\n  align-content: center;\n  margin: 2rem;\n`;\n\nexport { ImageCard };\n","import styled from \"styled-components\";\n\nconst ITEM_STATES = {\n  0: \"salmon\",\n  1: \"palegreen\",\n  2: \"lightgray\",\n};\n\nconst ProgressBarContainer = styled.div`\n  width: 95%;\n  margin: 1rem;\n`;\n\nconst ProgressSegment = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n  height: 10px;\n`;\n\nconst ProgressBarItem = styled.div`\n  flex: 100%;\n  background-color: ${(p) => ITEM_STATES[p.state]};\n  margin: 2px;\n  height: 8px;\n\n  &:first-child {\n    border-top-left-radius: 3px;\n    border-bottom-left-radius: 3px;\n  }\n\n  &:last-child {\n    border-top-right-radius: 3px;\n    border-bottom-right-radius: 3px;\n  }\n`;\n\nexport { ProgressBarContainer, ProgressSegment, ProgressBarItem };\n","import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport { Button, Card, B, Loader } from \"./styledComponents/Index\";\n\nconst TeamPicker = ({ handleSelectTeam, selectedTeams }) => {\n  const [teams, setTeams] = useState(null);\n\n  const fetchteams = () =>\n    axios.get(\"/api/v1/get-teams\").then((res) => {\n      const response = res.data.body;\n      setTeams(response);\n    });\n\n  useEffect(() => {\n    fetchteams();\n  }, []);\n\n  return (\n    <B>\n      <Card>\n        <B>\n          <h1>Pick some teams!</h1>\n          <p>\n            All palyers from the selected teams will be included in the quiz.\n          </p>\n          {teams ? (\n            <Card>\n              {teams.map((team, i) => (\n                <Button\n                  selected={selectedTeams.includes(team.team_code)}\n                  onClick={() => handleSelectTeam(team.team_code)}\n                  key={i}\n                >\n                  {team.team_code}\n                </Button>\n              ))}\n            </Card>\n          ) : (\n            <Loader size=\"2rem\" />\n          )}\n        </B>\n      </Card>\n    </B>\n  );\n};\n\nexport default TeamPicker;\n","import { Headline, Card, ImageCard } from \"./styledComponents/Index\";\n\nconst PlayerCard = ({ playerImg, playerName, playerNumber }) => {\n  const showPlayerNumber = true;\n  return (\n    <Card flexDirection=\"column\">\n      <ImageCard src={playerImg} alt=\"player\" />\n      <Headline>\n        {playerName.first} {playerName.last}\n      </Headline>\n      {showPlayerNumber && <Headline># {playerNumber}</Headline>}\n    </Card>\n  );\n};\nexport default PlayerCard;\n","import { React } from \"react\";\nimport { B } from \"./styledComponents/Index\";\nimport {\n  ProgressBarContainer,\n  ProgressSegment,\n  ProgressBarItem,\n} from \"./styledComponents/Index\";\n\nconst ScoreKeeper = ({ results }) => {\n  return (\n    <B>\n      <ProgressBarContainer>\n        <ProgressSegment>\n          {results.map((result, i) => (\n            <ProgressBarItem key={i} state={result} />\n          ))}\n        </ProgressSegment>\n      </ProgressBarContainer>\n    </B>\n  );\n};\n\nexport default ScoreKeeper;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PlayerCard from \"./PlayerCard\";\nimport { Loader, Input, Card, B } from \"./styledComponents/Index\";\nimport { shuffle } from \"../utils/Shuffle\";\nimport ScoreKeeper from \"./ScoreKeeper\";\n//import mock from \"../mock.json\";\n\nconst Quiz = ({ teams, endQuiz }) => {\n  const [players, setPlayers] = useState([]);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [results, setResults] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n  const [score, setScore] = useState(0);\n\n  const checkAnswer = () => {\n    const currentScore = score;\n    if (answer === players[questionIndex].default_jersey.toString()) {\n      results[questionIndex] = 1;\n      setScore(currentScore + 1);\n    } else {\n      results[questionIndex] = 0;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    if (event) {\n      event.preventDefault();\n      checkAnswer();\n      setAnswer(\"\");\n      handleNextQuestion();\n    }\n  };\n\n  const handleNextQuestion = () => {\n    if (players.length <= questionIndex + 1) endQuiz(results);\n    else setQuestionIndex(questionIndex + 1);\n  };\n  useEffect(() => {\n    const fetchPlayers = () => {\n      teams.map((teamCode) =>\n        axios\n          .get(\"/api/v1/get-players-by-team\", {\n            params: { team_code: teamCode.trim() },\n          })\n          .then((res) => {\n            const shuffledResponse = shuffle(res.data.body);\n            setPlayers(shuffledResponse);\n          })\n      );\n    };\n    //setPlayers(mock);\n    fetchPlayers();\n  }, [teams]);\n\n  useEffect(() => {\n    setResults(Array(players.length).fill(2));\n  }, [players]);\n\n  const handleInputChange = (event) => {\n    setAnswer(event.target.value);\n  };\n\n  return (\n    <B className=\"Quiz\">\n      {players.length ? (\n        <B>\n          <PlayerCard\n            playerImg={players[questionIndex].player_image_url}\n            playerName={{\n              first: players[questionIndex].first_name,\n              last: players[questionIndex].last_name,\n            }}\n            playerNumber={players[questionIndex].default_jersey}\n          />\n          <Card>\n            <ScoreKeeper results={results} />\n          </Card>\n          <Card flexWrap=\"nowrap\">\n            Player number:\n            <form onSubmit={handleSubmit}>\n              <Input\n                onChange={handleInputChange}\n                pattern=\"[A-Za-z0-9]+\"\n                value={answer}\n              />\n            </form>\n          </Card>\n        </B>\n      ) : (\n        <B>\n          <Loader size=\"2rem\" />\n          Preparing your quiz...\n        </B>\n      )}\n    </B>\n  );\n};\n\nexport default Quiz;\n","// Fisher-Yates shuffle\nexport function shuffle(array) {\n  array = [...array];\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n","export const QUIZ_STATES = {\n  PICK_TEAMS: \"pick teams\",\n  QUIZ_ONGOING: \"quiz ongoing\",\n  QUIZ_RESULT: \"quiz result\",\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TeamPicker from \"./components/TeamPicker\";\nimport Quiz from \"./components/Quiz\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { B, Button } from \"./components/styledComponents/Index\";\nimport { QUIZ_STATES } from \"./utils/Constants\";\nimport { Card } from \"./components/styledComponents/Index\";\n\nconst GlobalStyle = createGlobalStyle`\nbody{\n  background: silver;\n  min-height: 100vh;\n  margin: 0;\n  color: black;\n  font-family: 'Trebuchet MS'\n}\n`;\n\nconst App = () => {\n  const connectToShl = () => axios.get(\"/api/v1/connect-to-shl\");\n\n  const [selectedTeams, setSelectedTeams] = useState([]); // DEBUG change to empty array\n  const [quizState, setQuizState] = useState(QUIZ_STATES.PICK_TEAMS); // DEBUG change to PICK_TEAMS\n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    connectToShl();\n  }, []);\n\n  const endQuiz = (res) => {\n    setResults(res);\n    setQuizState(QUIZ_STATES.QUIZ_RESULT);\n  };\n\n  const handleSelectTeam = (team) => {\n    const newSelectedTeams = selectedTeams.filter((t) => t !== team);\n    setSelectedTeams(\n      newSelectedTeams.length === selectedTeams.length\n        ? [...newSelectedTeams, team]\n        : newSelectedTeams\n    );\n  };\n\n  const handleQuizStart = () => {\n    setQuizState(QUIZ_STATES.QUIZ_ONGOING);\n  };\n\n  return (\n    <B style={{ class: \"row\" }}>\n      <GlobalStyle />\n      {quizState === QUIZ_STATES.PICK_TEAMS && (\n        <B>\n          <TeamPicker\n            handleSelectTeam={handleSelectTeam}\n            selectedTeams={selectedTeams}\n          ></TeamPicker>\n          <Button\n            disabled={selectedTeams.length === 0}\n            onClick={() => handleQuizStart()}\n          >\n            Start\n          </Button>\n        </B>\n      )}\n      {quizState === QUIZ_STATES.QUIZ_ONGOING && (\n        <Quiz teams={selectedTeams} endQuiz={endQuiz}></Quiz>\n      )}\n      {quizState === QUIZ_STATES.QUIZ_RESULT && (\n        <Card style={{ height: \"30em\" }}>\n          <h1>\n            Total Score:{\" \"}\n            {results.filter(function (value) {\n              return value === 1;\n            }).length +\n              \" / \" +\n              results.length}{\" \"}\n            🎉\n          </h1>\n        </Card>\n      )}\n    </B>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}